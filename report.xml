<testsuites name="Tests">
<testsuite name="Request headers" tests="1" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.002">
<testcase classname="Request headers" name="should be undefiend" time="0"/>
</testsuite>
<testsuite name="Request method" tests="4" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.003">
<testcase classname="Request method" name="should be set to `HttpMethod.GET` by default" time="0"/>
<testcase classname="Request method" name="should be able to be changed" time="0"/>
<testcase classname="Request method" name="should throw an error if the method is not a string" time="0"/>
<testcase classname="Request method" name="should throw an error for an invalid method" time="0"/>
</testsuite>
<testsuite name="Request protocol" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.002">
<testcase classname="Request protocol" name="should be set to `https` by default" time="0"/>
<testcase classname="Request protocol" name="should be able to be set to a different value" time="0"/>
</testsuite>
<testsuite name="Request hostname" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request hostname" name="should be set to `baas.kinvey.com` by default" time="0"/>
<testcase classname="Request hostname" name="should be able to be set to a different value" time="0"/>
</testsuite>
<testsuite name="Request auth" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0">
<testcase classname="Request auth" name="should be set to `Auth.none` by default" time="0"/>
<testcase classname="Request auth" name="should be able to be set to a plain object" time="0"/>
</testsuite>
<testsuite name="Request path" tests="3" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0">
<testcase classname="Request path" name="should be equal to an empty string by default" time="0"/>
<testcase classname="Request path" name="should be set to the provided path in the constructor" time="0"/>
<testcase classname="Request path" name="should be able to be set to a different value" time="0"/>
</testsuite>
<testsuite name="Request body" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0">
<testcase classname="Request body" name="should be undefined" time="0"/>
<testcase classname="Request body" name="should be able to be set" time="0"/>
</testsuite>
<testsuite name="Request dataPolicy" tests="3" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.002">
<testcase classname="Request dataPolicy" name="should be equal to `DataPolicy.CloudFirst` by default" time="0"/>
<testcase classname="Request dataPolicy" name="should be able to be set to a data policy" time="0"/>
<testcase classname="Request dataPolicy" name="should throw and error for an invalid data policy" time="0.001"/>
</testsuite>
<testsuite name="Request url" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request url" name="should be equal to `https://baas.kinvey.com`" time="0"/>
<testcase classname="Request url" name="should not be able to be set" time="0"/>
</testsuite>
<testsuite name="Request response" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request response" name="should not exist" time="0.001"/>
<testcase classname="Request response" name="should not be able to be set" time="0"/>
</testsuite>
<testsuite name="Request constructor()" tests="4" failures="0" skipped="1" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request constructor()" name="should accept a http method as the first parameter" time="0"/>
<testcase classname="Request constructor()" name="should accept a path as the second parameter" time="0"/>
<testcase classname="Request constructor()" name="should accept a query as the third parameter" time="NaN">
<skipped/>
</testcase>
<testcase classname="Request constructor()" name="should accept a body as the fourth parameter" time="0"/>
</testsuite>
<testsuite name="Request getHeader()" tests="4" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request getHeader()" name="should respond" time="0"/>
<testcase classname="Request getHeader()" name="should have Accept header set to `application/json` by default" time="0"/>
<testcase classname="Request getHeader()" name="should have Content-Type header set to `application/json` by default" time="0"/>
<testcase classname="Request getHeader()" name="should have X-Kinvey-Api-Version header set to `3` by default" time="0"/>
</testsuite>
<testsuite name="Request setHeader()" tests="5" failures="0" skipped="2" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request setHeader()" name="should respond" time="0"/>
<testcase classname="Request setHeader()" name="should add the header" time="0"/>
<testcase classname="Request setHeader()" name="should replace an existing header" time="0.001"/>
<testcase classname="Request setHeader()" name="should throw an error if header value is not a string" time="NaN">
<skipped/>
</testcase>
<testcase classname="Request setHeader()" name="should throw an error if the header value is to large" time="NaN">
<skipped/>
</testcase>
</testsuite>
<testsuite name="Request addHeaders()" tests="5" failures="0" skipped="2" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request addHeaders()" name="should respond" time="0"/>
<testcase classname="Request addHeaders()" name="should add the headers" time="0"/>
<testcase classname="Request addHeaders()" name="should replace existing headers" time="0.001"/>
<testcase classname="Request addHeaders()" name="should throw an error if header value is not a string" time="NaN">
<skipped/>
</testcase>
<testcase classname="Request addHeaders()" name="should throw an error if the header value is to large" time="NaN">
<skipped/>
</testcase>
</testsuite>
<testsuite name="Request removeHeader()" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request removeHeader()" name="should respond" time="0"/>
<testcase classname="Request removeHeader()" name="should remove a header" time="0"/>
</testsuite>
<testsuite name="Request isCacheEnabled()" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request isCacheEnabled()" name="should respond" time="0"/>
<testcase classname="Request isCacheEnabled()" name="should return a boolean" time="0"/>
</testsuite>
<testsuite name="Request enableCache()" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0.001">
<testcase classname="Request enableCache()" name="should respond" time="0"/>
<testcase classname="Request enableCache()" name="should enable the cache" time="0"/>
</testsuite>
<testsuite name="Request disableCache()" tests="2" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0">
<testcase classname="Request disableCache()" name="should respond" time="0"/>
<testcase classname="Request disableCache()" name="should disable the cache" time="0"/>
</testsuite>
<testsuite name="Request execute function" tests="2" failures="0" skipped="1" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0">
<testcase classname="Request execute function" name="should respond" time="0"/>
<testcase classname="Request execute function" name="should return a promise" time="NaN">
<skipped/>
</testcase>
</testsuite>
<testsuite name="Request toJSON()" tests="1" failures="0" skipped="0" timestamp="Fri, 21 Aug 2015 13:57:37 GMT" time="0">
<testcase classname="Request toJSON()" name="should respond" time="0"/>
</testsuite>
</testsuites>
