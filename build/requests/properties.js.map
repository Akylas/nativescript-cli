{"version":3,"sources":["requests/properties.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;AACA,IAAM,gBAAgB,YAAhB;;;;;;IAKO;AACX,WADW,iBACX,GAA6B;QAAjB,mEAAa,kBAAI;;0BADlB,mBACkB;;AAC3B,SAAK,UAAL,GAAkB,UAAlB,CAD2B;GAA7B;;eADW;;;;;;;;;;;gCA2DC,KAAK;AACf,UAAM,aAAa,KAAK,MAAL,EAAb,CADS;;AAGf,UAAI,OAAO,WAAW,cAAX,CAA0B,GAA1B,CAAP,EAAuC;AACzC,eAAO,WAAW,GAAX,CAAP,CADyC;OAA3C;;AAIA,aAAO,SAAP,CAPe;;;;;;;;;;;;;gCAiBL,KAAK,OAAO;AACtB,UAAM,aAAa,EAAb,CADgB;AAEtB,iBAAW,GAAX,IAAkB,KAAlB,CAFsB;AAGtB,WAAK,aAAL,CAAmB,UAAnB,EAHsB;AAItB,aAAO,IAAP,CAJsB;;;;kCAOV,YAAY;;;AACxB,UAAI,CAAC,6BAAc,UAAd,CAAD,EAA4B;AAC9B,cAAM,wBAAgB,uCAAhB,CAAN,CAD8B;OAAhC;;AAIA,aAAO,IAAP,CAAY,UAAZ,EAAwB,OAAxB,CAAgC,UAAC,GAAD,EAAS;AACvC,YAAM,QAAQ,WAAW,GAAX,CAAR,CADiC;;AAGvC,YAAI,KAAJ,EAAW;AACT,gBAAK,UAAL,CAAgB,GAAhB,IAAuB,KAAvB,CADS;SAAX,MAEO;AACL,iBAAO,MAAK,UAAL,CAAgB,GAAhB,CAAP,CADK;SAFP;OAH8B,CAAhC,CALwB;;;;4BAgBlB;AACN,WAAK,UAAL,GAAkB,EAAlB,CADM;;;;kCAIM,KAAK;AACjB,UAAM,aAAa,KAAK,UAAL,CADF;;AAGjB,UAAI,OAAO,WAAW,cAAX,CAA0B,GAA1B,CAAP,EAAuC;AACzC,eAAO,WAAW,GAAX,CAAP,CADyC;OAA3C;;;;;;;;;;;sCAUgB;AAChB,aAAO,KAAK,aAAL,CAAmB,aAAnB,CAAP,CADgB;;;;6BAIT;AACP,aAAO,KAAK,UAAL,CADA;;;;wBAnHQ;AACf,aAAO,KAAK,WAAL,CADQ;;sBAIF,YAAY;AACzB,WAAK,WAAL,GAAmB,UAAnB,CADyB;;;;;;;;;;;wBASV;AACf,aAAO,KAAK,WAAL,CAAiB,aAAjB,CAAP,CADe;;;;;;;;;;;wBAWO;wCAAN;;OAAM;;AACtB,UAAM,UAAU,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAA3B,EAAiC,CAAjC,CAAV,CADgB;AAEtB,UAAM,QAAQ,KAAK,CAAL,CAAR,CAFgB;AAGtB,UAAM,QAAQ,QAAQ,CAAR,CAAR,CAHgB;AAItB,UAAM,QAAQ,QAAQ,CAAR,CAAR,CAJgB;AAKtB,UAAI,aAAa,EAAb,CALkB;;AAOtB,UAAI,KAAJ,EAAW;AACT,qBAAa,MAAG,MAAH,CAAW,IAAX,EAAb,CADS;OAAX;;AAIA,UAAI,KAAJ,EAAW;AACT,qBAAa,OAAI,MAAJ,CAAY,IAAZ,EAAb,CADS;OAAX;;AAIA,UAAI,KAAJ,EAAW;AACT,qBAAa,OAAI,MAAJ,CAAY,IAAZ,EAAb,CADS;OAAX;;AAIA,WAAK,WAAL,CAAiB,aAAjB,EAAgC,UAAhC,EAnBsB;AAoBtB,aAAO,IAAP,CApBsB;;;;SA7Bb","file":"requests/properties.js","sourcesContent":["import { KinveyError } from '../errors';\nimport isPlainObject from 'lodash/isPlainObject';\nconst appVersionKey = 'appVersion';\n\n/**\n * Request Properties class\n */\nexport class RequestProperties {\n  constructor(properties = {}) {\n    this.properties = properties;\n  }\n\n  get properties() {\n    return this._properties;\n  }\n\n  set properties(properties) {\n    this._properties = properties;\n  }\n\n  /**\n   * Return the app version request property.\n   *\n   * @return {String} App version\n   */\n  get appVersion() {\n    return this.getProperty(appVersionKey);\n  }\n\n  /**\n   * Set the app version request property. The app version can be provided\n   * in major.minor.patch format or something specific to your application.\n   *\n   * @param  {Any} version App version.\n   * @return {RequestProperties} The request properties instance.\n   */\n  set appVersion(...args) {\n    const version = Array.prototype.slice.call(args, 1);\n    const major = args[0];\n    const minor = version[1];\n    const patch = version[2];\n    let appVersion = '';\n\n    if (major) {\n      appVersion = `${major}`.trim();\n    }\n\n    if (minor) {\n      appVersion = `.${minor}`.trim();\n    }\n\n    if (patch) {\n      appVersion = `.${patch}`.trim();\n    }\n\n    this.setProperty(appVersionKey, appVersion);\n    return this;\n  }\n\n  /**\n   * Returns the request property for the key or `undefined` if\n   * it has not been set.\n   *\n   * @param  {String} key Request property key\n   * @return {*} Request property value\n   */\n  getProperty(key) {\n    const properties = this.toJSON();\n\n    if (key && properties.hasOwnProperty(key)) {\n      return properties[key];\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Sets the request property key to the value.\n   *\n   * @param {String} key Request property key\n   * @param {*} value Request property value\n   * @return {RequestProperties} The request properties instance.\n   */\n  setProperty(key, value) {\n    const properties = {};\n    properties[key] = value;\n    this.addProperties(properties);\n    return this;\n  }\n\n  addProperties(properties) {\n    if (!isPlainObject(properties)) {\n      throw new KinveyError('properties argument must be an object');\n    }\n\n    Object.keys(properties).forEach((key) => {\n      const value = properties[key];\n\n      if (value) {\n        this.properties[key] = value;\n      } else {\n        delete this.properties[key];\n      }\n    });\n  }\n\n  clear() {\n    this.properties = {};\n  }\n\n  clearProperty(key) {\n    const properties = this.properties;\n\n    if (key && properties.hasOwnProperty(key)) {\n      delete properties[key];\n    }\n  }\n\n  /**\n   * Clears the app version property.\n   *\n   * @return {RequestProperties} The request properties instance.\n   */\n  clearAppVersion() {\n    return this.clearProperty(appVersionKey);\n  }\n\n  toJSON() {\n    return this.properties;\n  }\n}\n"],"sourceRoot":"/source/"}