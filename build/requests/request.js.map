{"version":3,"sources":["requests/request.js"],"names":[],"mappings":"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","file":"requests/request.js","sourcesContent":["import Promise from 'babybird';\nimport { HttpMethod, AuthType } from '../enums';\nimport { Device } from '../utils/device';\nimport { RequestProperties } from './properties';\nimport { KinveyRack } from '../rack/rack';\nimport { Client } from '../client';\nimport { byteCount } from '../utils/string';\nimport qs from 'qs';\nimport appendQuery from 'append-query';\nimport assign from 'lodash/assign';\nimport result from 'lodash/result';\nimport forEach from 'lodash/forEach';\nimport isString from 'lodash/isString';\nimport isPlainObject from 'lodash/isPlainObject';\nimport isEmpty from 'lodash/isEmpty';\nconst kmdAttribute = process.env.KINVEY_KMD_ATTRIBUTE || '_kmd';\n\nconst Auth = {\n  /**\n   * Authenticate through (1) user credentials, (2) Master Secret, or (3) App\n   * Secret.\n   *\n   * @returns {Object}\n   */\n  all(client) {\n    try {\n      return Auth.session(client);\n    } catch (error) {\n      return Auth.basic(client);\n    }\n  },\n\n  /**\n   * Authenticate through App Secret.\n   *\n   * @returns {Object}\n   */\n  app(client) {\n    if (!client.appKey || !client.appSecret) {\n      throw new Error('Missing client credentials');\n    }\n\n    return {\n      scheme: 'Basic',\n      username: client.appKey,\n      password: client.appSecret\n    };\n  },\n\n  /**\n   * Authenticate through (1) Master Secret, or (2) App Secret.\n   *\n   * @returns {Object}\n   */\n  basic(client) {\n    try {\n      return Auth.master(client);\n    } catch (error) {\n      return Auth.app(client);\n    }\n  },\n\n  /**\n   * Authenticate through Master Secret.\n   *\n   * @returns {Object}\n   */\n  master(client) {\n    if (!client.appKey || !client.masterSecret) {\n      throw new Error('Missing client credentials');\n    }\n\n    return {\n      scheme: 'Basic',\n      username: client.appKey,\n      password: client.masterSecret\n    };\n  },\n\n  /**\n   * Do not authenticate.\n   *\n   * @returns {Null}\n   */\n  none() {\n    return null;\n  },\n\n  /**\n   * Authenticate through user credentials.\n   *\n   * @returns {Object}\n   */\n  session(client) {\n    const activeUserData = client.getActiveUserData();\n\n    if (!activeUserData) {\n      throw new Error('There is not an active user.');\n    }\n\n    return {\n      scheme: 'Kinvey',\n      credentials: activeUserData[kmdAttribute].authtoken\n    };\n  }\n};\n\n/**\n * @private\n */\nexport class Request {\n  constructor(options = {}) {\n    options = assign({\n      method: HttpMethod.GET,\n      headers: {},\n      url: '',\n      data: null,\n      timeout: process.env.KINVEY_DEFAULT_TIMEOUT || 10000,\n      followRedirect: true\n    }, options);\n\n    this.method = options.method;\n    this.url = options.url;\n    this.data = options.data || options.body;\n    this.timeout = options.timeout;\n    this.followRedirect = options.followRedirect;\n    this.executing = false;\n\n    const headers = options.headers && isPlainObject(options.headers) ? options.headers : {};\n\n    if (!headers.Accept || !headers.accept) {\n      headers.Accept = 'application/json; charset=utf-8';\n    }\n\n    this.addHeaders(headers);\n  }\n\n  get method() {\n    return this._method;\n  }\n\n  set method(method) {\n    if (!isString(method)) {\n      method = String(method);\n    }\n\n    method = method.toUpperCase();\n\n    switch (method) {\n      case HttpMethod.GET:\n      case HttpMethod.POST:\n      case HttpMethod.PATCH:\n      case HttpMethod.PUT:\n      case HttpMethod.DELETE:\n        this._method = method;\n        break;\n      default:\n        throw new Error('Invalid Http Method. Only GET, POST, PATCH, PUT, and DELETE are allowed.');\n    }\n  }\n\n  get url() {\n    return appendQuery(this._url, qs.stringify({\n      _: Math.random().toString(36).substr(2)\n    }));\n  }\n\n  set url(url) {\n    this._url = url;\n  }\n\n  get body() {\n    return this.data;\n  }\n\n  set body(body) {\n    this.data = body;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  set data(data) {\n    if (data) {\n      const contentTypeHeader = this.getHeader('Content-Type');\n      if (!contentTypeHeader) {\n        this.setHeader('Content-Type', 'application/json; charset=utf-8');\n      }\n    } else {\n      this.removeHeader('Content-Type');\n    }\n\n    this._data = data;\n  }\n\n  getHeader(name) {\n    if (name) {\n      if (!isString(name)) {\n        name = String(name);\n      }\n\n      const headers = this.headers || {};\n      const keys = Object.keys(headers);\n\n      for (let i = 0, len = keys.length; i < len; i++) {\n        const key = keys[i];\n\n        if (key.toLowerCase() === name.toLowerCase()) {\n          return headers[key];\n        }\n      }\n    }\n\n    return undefined;\n  }\n\n  setHeader(name, value) {\n    if (!name || !value) {\n      throw new Error('A name and value must be provided to set a header.');\n    }\n\n    if (!isString(name)) {\n      name = String(name);\n    }\n\n    const headers = this.headers || {};\n\n    if (!isString(value)) {\n      headers[name] = JSON.stringify(value);\n    } else {\n      headers[name] = value;\n    }\n\n    this.headers = headers;\n  }\n\n  addHeader(header = {}) {\n    return this.setHeader(header.name, header.value);\n  }\n\n  addHeaders(headers) {\n    if (!isPlainObject(headers)) {\n      throw new Error('Headers argument must be an object.');\n    }\n\n    const names = Object.keys(headers);\n\n    forEach(names, name => {\n      const value = headers[name];\n      this.setHeader(name, value);\n    });\n  }\n\n  removeHeader(name) {\n    if (name) {\n      if (!isString(name)) {\n        name = String(name);\n      }\n\n      const headers = this.headers || {};\n      delete headers[name];\n      this.headers = headers;\n    }\n  }\n\n  clearHeaders() {\n    this.headers = {};\n  }\n\n  isExecuting() {\n    return this.executing === true;\n  }\n\n  execute() {\n    if (this.executing) {\n      return Promise.reject(new Error('Unable to execute the request. The request is already executing.'));\n    }\n\n    this.executing = Promise.resolve().then(response => {\n      this.executing = false;\n      return response;\n    }).catch(error => {\n      this.executing = false;\n      throw error;\n    });\n\n    return this.executing;\n  }\n\n  toJSON() {\n    const json = {\n      method: this.method,\n      headers: this.headers,\n      url: this.url,\n      data: this.data,\n      followRedirect: this.followRedirect\n    };\n\n    return json;\n  }\n}\n\n/**\n * @private\n */\nexport class KinveyRequest extends Request {\n  constructor(options = {}) {\n    super(options);\n\n    options = assign({\n      authType: AuthType.None,\n      properties: null,\n      query: null,\n      client: Client.sharedInstance()\n    }, options);\n\n    this.rack = new KinveyRack();\n    this.authType = options.authType;\n    this.properties = options.properties;\n    this.query = result(options.query, 'toJSON', options.query);\n    this.client = options.client;\n\n    const headers = {};\n    headers['X-Kinvey-Api-Version'] = process.env.KINVEY_API_VERSION || 3;\n\n    const device = new Device();\n    headers['X-Kinvey-Device-Information'] = JSON.stringify(device.toJSON());\n\n    if (options.contentType) {\n      headers['X-Kinvey-Content-Type'] = options.contentType;\n    }\n\n    if (options.skipBL === true) {\n      headers['X-Kinvey-Skip-Business-Logic'] = true;\n    }\n\n    if (options.trace === true) {\n      headers['X-Kinvey-Include-Headers-In-Response'] = 'X-Kinvey-Request-Id';\n      headers['X-Kinvey-ResponseWrapper'] = true;\n    }\n\n    this.addHeaders(headers);\n  }\n\n  set properties(properties) {\n    if (properties) {\n      if (!(properties instanceof RequestProperties)) {\n        properties = new RequestProperties(result(properties, 'toJSON', properties));\n      }\n\n      const appVersion = properties.appVersion;\n\n      if (appVersion) {\n        this.setHeader('X-Kinvey-Client-App-Version', appVersion);\n      } else {\n        this.removeHeader('X-Kinvey-Client-App-Version');\n      }\n\n      const customProperties = result(properties, 'toJSON', {});\n      delete customProperties.appVersion;\n      const customPropertiesHeader = JSON.stringify(customProperties);\n      const customPropertiesByteCount = byteCount(customPropertiesHeader);\n      const customPropertiesMaxBytesAllowed = process.env.KINVEY_MAX_HEADER_BYTES || 2000;\n\n      if (customPropertiesByteCount >= customPropertiesMaxBytesAllowed) {\n        throw new Error(\n          `The custom properties are ${customPropertiesByteCount} bytes.` +\n          `It must be less then ${customPropertiesMaxBytesAllowed} bytes.`,\n          'Please remove some custom properties.');\n      }\n\n      this.setHeader('X-Kinvey-Custom-Request-Properties', customPropertiesHeader);\n    }\n  }\n\n  get url() {\n    const url = super.url;\n    const queryString = {};\n\n    if (this.query) {\n      queryString.query = this.query.filter;\n\n      if (!isEmpty(this.query.fields)) {\n        queryString.fields = this.query.fields.join(',');\n      }\n\n      if (this.query.limit) {\n        queryString.limit = this.query.limit;\n      }\n\n      if (this.query.skip > 0) {\n        queryString.skip = this.query.skip;\n      }\n\n      if (!isEmpty(this.query.sort)) {\n        queryString.sort = this.query.sort;\n      }\n    }\n\n    const keys = Object.keys(queryString);\n    forEach(keys, key => {\n      queryString[key] = isString(queryString[key]) ? queryString[key] : JSON.stringify(queryString[key]);\n    });\n\n    if (isEmpty(queryString)) {\n      return url;\n    }\n\n    return appendQuery(url, qs.stringify(queryString));\n  }\n\n  set url(url) {\n    super.url = url;\n  }\n\n  get authorizationHeader() {\n    let authInfo;\n\n    switch (this.authType) {\n      case AuthType.All:\n        authInfo = Auth.all(this.client);\n        break;\n      case AuthType.App:\n        authInfo = Auth.app(this.client);\n        break;\n      case AuthType.Basic:\n        authInfo = Auth.basic(this.client);\n        break;\n      case AuthType.Master:\n        authInfo = Auth.master(this.client);\n        break;\n      case AuthType.None:\n        authInfo = Auth.none(this.client);\n        break;\n      case AuthType.Session:\n        authInfo = Auth.session(this.client);\n        break;\n      default:\n        try {\n          authInfo = Auth.session(this.client);\n        } catch (error) {\n          try {\n            authInfo = Auth.master(this.client);\n          } catch (error2) {\n            throw error;\n          }\n        }\n    }\n\n    if (authInfo) {\n      let credentials = authInfo.credentials;\n\n      if (authInfo.username) {\n        credentials = new Buffer(`${authInfo.username}:${authInfo.password}`).toString('base64');\n      }\n\n      return {\n        name: 'Authorization',\n        value: `${authInfo.scheme} ${credentials}`\n      };\n    }\n\n    return null;\n  }\n\n  execute() {\n    const authorizationHeader = this.authorizationHeader;\n\n    if (authorizationHeader) {\n      this.addHeader(authorizationHeader);\n    }\n\n    const promise = super.execute();\n    return promise;\n  }\n\n  cancel() {\n    const promise = super.cancel();\n    return promise;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.query = this.query;\n    return json;\n  }\n}\n"],"sourceRoot":"/source/"}