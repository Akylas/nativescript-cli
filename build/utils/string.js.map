{"version":3,"sources":["utils/string.js"],"names":[],"mappings":";;;;;QAKgB;QAaA;;AAlBhB;;;;;;;;;AAKO,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AAC7B,MAAI,QAAQ,CAAR,CADyB;AAE7B,MAAM,eAAe,IAAI,MAAJ,CAFQ;AAG7B,QAAM,OAAO,OAAO,EAAP,CAAb,CAH6B;;AAK7B,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,YAAJ,EAAkB,GAAlC,EAAuC;AACrC,QAAM,YAAY,UAAU,IAAI,CAAJ,CAAV,EAAkB,KAAlB,CAAwB,GAAxB,EAA6B,MAA7B,CADmB;AAErC,aAAS,cAAc,CAAd,GAAkB,CAAlB,GAAsB,YAAY,CAAZ,CAFM;GAAvC;;AAKA,SAAO,KAAP,CAV6B;CAAxB;;AAaA,SAAS,YAAT,CAAsB,IAAtB,EAAyC;MAAb,+DAAS,kBAAI;;AAC9C,cAAU,SAAS,mBAAI,IAAJ,CAAnB,CAD8C;CAAzC","file":"utils/string.js","sourcesContent":["import uid from 'uid';\n\n/**\n * @private\n */\nexport function byteCount(str) {\n  let count = 0;\n  const stringLength = str.length;\n  str = String(str || '');\n\n  for (let i = 0; i < stringLength; i++) {\n    const partCount = encodeURI(str[i]).split('%').length;\n    count += partCount === 1 ? 1 : partCount - 1;\n  }\n\n  return count;\n}\n\nexport function randomString(size, prefix = '') {\n  return `${prefix}${uid(size)}`;\n}\n"],"sourceRoot":"/source/"}