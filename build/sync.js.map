{"version":3,"sources":["sync.js"],"names":[],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AACA,IAAM,qBAAqB,QAAQ,GAAR,CAAY,2BAAZ,IAA2C,MAA3C;AAC3B,IAAM,cAAc,QAAQ,GAAR,CAAY,mBAAZ,IAAmC,KAAnC;AACpB,IAAI,UAAU,QAAQ,GAAR,CAAY,yBAAZ,IAAyC,IAAzC;;AAEd,IAAM,OAAO;AACX,kCAAY;AACV,WAAO,OAAP,CADU;GADD;AAKX,4BAAS;AACP,cAAU,IAAV,CADO;GALE;AASX,8BAAU;AACR,cAAU,KAAV,CADQ;GATC;AAaX,wBAAM,OAAO,SAAS;AACpB,QAAM,YAAY,qBAAU,WAAV,CAAsB,kBAAtB,EAA0C,qBAAc,IAAd,CAAtD,CADc;AAEpB,QAAM,UAAU,UAAU,IAAV,CAAe,KAAf,EAAsB,OAAtB,EACb,IADa,CACR;aAAY,sBAAO,QAAP,EAAiB,UAAC,MAAD,EAAS,IAAT;eAAkB,SAAS,KAAK,IAAL;OAA3B,EAAsC,CAAvD;KAAZ,CADF,CAFc;AAIpB,WAAO,OAAP,CAJoB;GAbX;AAoBX,sBAAK,SAAS;AACZ,QAAM,YAAY,qBAAU,WAAV,CAAsB,kBAAtB,EAA0C,qBAAc,IAAd,CAAtD,CADM;AAEZ,QAAM,QAAQ,kBAAR,CAFM;AAGZ,UAAM,WAAN,CAAkB,MAAlB,EAA0B,CAA1B,EAHY;AAIZ,QAAM,UAAU,UAAU,IAAV,CAAe,KAAf,EAAsB,OAAtB,EAA+B,IAA/B,CAAoC,oBAAY;AAC9D,UAAM,WAAW,SAAS,GAAT,CAAa,gBAAQ;AACpC,YAAM,QAAQ,qBAAU,WAAV,CAAsB,KAAK,WAAL,CAAtB,EAAyC,qBAAc,IAAd,CAAjD,CAD8B;AAEpC,eAAO,MAAM,IAAN,EAAP,CAFoC;OAAR,CAAxB,CADwD;AAK9D,aAAO,mBAAQ,GAAR,CAAY,QAAZ,CAAP,CAL8D;KAAZ,CAA9C,CAJM;AAWZ,WAAO,OAAP,CAXY;GApBH;AAkCX,wBAAmB;QAAd,gEAAU,kBAAI;;AACjB,QAAM,YAAY,qBAAU,WAAV,CAAsB,kBAAtB,EAA0C,qBAAc,IAAd,CAAtD,CADW;AAEjB,QAAM,UAAU,UAAU,IAAV,CAAe,IAAf,EAAqB,OAArB,EAA8B,IAA9B,CAAmC,oBAAY;AAC7D,UAAM,WAAW,SAAS,GAAT,CAAa,gBAAQ;AACpC,YAAM,QAAQ,qBAAU,WAAV,CAAsB,KAAK,WAAL,CAAtB,EAAyC,qBAAc,IAAd,CAAjD,CAD8B;AAEpC,eAAO,MAAM,IAAN,EAAP,CAFoC;OAAR,CAAxB,CADuD;AAK7D,aAAO,mBAAQ,GAAR,CAAY,QAAZ,CAAP,CAL6D;KAAZ,CAA7C,CAFW;AASjB,WAAO,OAAP,CATiB;GAlCR;CAAP;;QA+CG","file":"sync.js","sourcesContent":["import Promise from 'babybird';\nimport { DataStore } from './stores/datastore';\nimport { Query } from './query';\nimport { DataStoreType } from './enums';\nimport reduce from 'lodash/reduce';\nconst syncCollectionName = process.env.KINVEY_SYNC_COLLECTION_NAME || 'sync';\nconst idAttribute = process.env.KINVEY_ID_ATTRIBUTE || '_id';\nlet enabled = process.env.KINVEY_SYNC_DEFAULT_STATE || true;\n\nconst Sync = {\n  isEnabled() {\n    return enabled;\n  },\n\n  enable() {\n    enabled = true;\n  },\n\n  disable() {\n    enabled = false;\n  },\n\n  count(query, options) {\n    const syncStore = DataStore.getInstance(syncCollectionName, DataStoreType.Sync);\n    const promise = syncStore.find(query, options)\n      .then(syncData => reduce(syncData, (result, data) => result + data.size, 0));\n    return promise;\n  },\n\n  push(options) {\n    const syncStore = DataStore.getInstance(syncCollectionName, DataStoreType.Sync);\n    const query = new Query();\n    query.greaterThan('size', 0);\n    const promise = syncStore.find(query, options).then(syncData => {\n      const promises = syncData.map(data => {\n        const store = DataStore.getInstance(data[idAttribute], DataStoreType.Sync);\n        return store.push();\n      });\n      return Promise.all(promises);\n    });\n    return promise;\n  },\n\n  sync(options = {}) {\n    const syncStore = DataStore.getInstance(syncCollectionName, DataStoreType.Sync);\n    const promise = syncStore.find(null, options).then(syncData => {\n      const promises = syncData.map(data => {\n        const store = DataStore.getInstance(data[idAttribute], DataStoreType.Sync);\n        return store.sync();\n      });\n      return Promise.all(promises);\n    });\n    return promise;\n  }\n};\n\nexport { Sync };\n"],"sourceRoot":"/source/"}