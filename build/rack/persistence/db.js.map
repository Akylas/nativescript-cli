{"version":3,"sources":["rack/persistence/db.js"],"names":[],"mappings":"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","file":"rack/persistence/db.js","sourcesContent":["import Promise from 'babybird';\nimport { Query } from '../../query';\nimport { Aggregation } from '../../aggregation';\nimport { IndexedDB } from './adapters/indexeddb';\nimport { LocalStorage } from './adapters/localstorage';\nimport { Memory } from './adapters/memory';\nimport { WebSQL } from './adapters/websql';\nimport { KinveyError } from '../../errors';\nimport { Log } from '../../log';\nimport map from 'lodash/map';\nimport result from 'lodash/result';\nimport reduce from 'lodash/reduce';\nimport forEach from 'lodash/forEach';\nimport isString from 'lodash/isString';\nimport isArray from 'lodash/isArray';\nconst idAttribute = process.env.KINVEY_ID_ATTRIBUTE || '_id';\nconst kmdAttribute = process.env.KINVEY_KMD_ATTRIBUTE || '_kmd';\n\n/**\n * @private\n * Enum for DB Adapters.\n */\nconst DBAdapter = {\n  IndexedDB: 'IndexedDB',\n  LocalStorage: 'LocalStorage',\n  Memory: 'Memory',\n  WebSQL: 'WebSQL'\n};\nObject.freeze(DBAdapter);\nexport { DBAdapter };\n\n/**\n * @private\n */\nexport class DB {\n  constructor(name, adapters = [DBAdapter.IndexedDB, DBAdapter.WebSQL, DBAdapter.LocalStorage, DBAdapter.Memory]) {\n    if (!isArray(adapters)) {\n      adapters = [adapters];\n    }\n\n    forEach(adapters, adapter => {\n      switch (adapter) {\n        case DBAdapter.IndexedDB:\n          if (IndexedDB.isSupported()) {\n            this.adapter = new IndexedDB(name);\n            return false;\n          }\n\n          break;\n        case DBAdapter.LocalStorage:\n          if (LocalStorage.isSupported()) {\n            this.adapter = new LocalStorage(name);\n            return false;\n          }\n\n          break;\n        case DBAdapter.Memory:\n          if (Memory.isSupported()) {\n            this.adapter = new Memory(name);\n            return false;\n          }\n\n          break;\n        case DBAdapter.WebSQL:\n          if (WebSQL.isSupported()) {\n            this.adapter = new WebSQL(name);\n            return false;\n          }\n\n          break;\n        default:\n          Log.warn(`The ${adapter} adapter is is not recognized.`);\n      }\n\n      return true;\n    });\n\n    if (!this.adapter) {\n      if (Memory.isSupported()) {\n        Log.error('Provided adapters are unsupported on this platform. ' +\n          'Defaulting to StoreAdapter.Memory adapter.', adapters);\n        this.adapter = new Memory(name);\n      } else {\n        Log.error('Provided adapters are unsupported on this platform.', adapters);\n      }\n    }\n  }\n\n  get objectIdPrefix() {\n    return '';\n  }\n\n  generateObjectId(length = 24) {\n    const chars = 'abcdef0123456789';\n    let objectId = '';\n\n    for (let i = 0, j = chars.length; i < length; i++) {\n      const pos = Math.floor(Math.random() * j);\n      objectId += chars.substring(pos, pos + 1);\n    }\n\n    objectId = `${this.objectIdPrefix}${objectId}`;\n    return objectId;\n  }\n\n  find(collection, query) {\n    const promise = this.adapter.find(collection).then(entities => {\n      if (!entities) {\n        return [];\n      }\n\n      return entities;\n    }).then(entities => {\n      if (query && !(query instanceof Query)) {\n        query = new Query(result(query, 'toJSON', query));\n      }\n\n      if (entities.length > 0 && query) {\n        entities = query._process(entities);\n      }\n\n      return entities;\n    });\n\n    return promise;\n  }\n\n  count(collection, query) {\n    const promise = this.find(collection, query).then(entities => entities.length);\n    return promise;\n  }\n\n  group(collection, aggregation) {\n    const promise = this.find(collection).then(entities => {\n      if (!(aggregation instanceof Aggregation)) {\n        aggregation = new Aggregation(result(aggregation, 'toJSON', aggregation));\n      }\n\n      if (entities.length > 0 && aggregation) {\n        return aggregation.process(entities);\n      }\n\n      return null;\n    });\n\n    return promise;\n  }\n\n  findById(collection, id) {\n    if (!isString(id)) {\n      return Promise.reject(new KinveyError('id must be a string', id));\n    }\n\n    const promise = this.adapter.findById(collection, id);\n    return promise;\n  }\n\n  save(collection, entities = []) {\n    let singular = false;\n\n    if (!entities) {\n      return Promise.resolve(null);\n    }\n\n    if (!isArray(entities)) {\n      singular = true;\n      entities = [entities];\n    }\n\n    entities = map(entities, entity => {\n      let id = entity[idAttribute];\n      const kmd = entity[kmdAttribute] || {};\n\n      if (!id) {\n        id = this.generateObjectId();\n        kmd.local = true;\n      }\n\n      delete kmd.lmt;\n      entity[idAttribute] = id;\n      entity[kmdAttribute] = kmd;\n      return entity;\n    });\n\n    return this.adapter.save(collection, entities).then(entities => {\n      if (singular && entities.length > 0) {\n        return entities[0];\n      }\n\n      return entities;\n    });\n  }\n\n  remove(collection, query) {\n    if (query && !(query instanceof Query)) {\n      query = new Query(result(query, 'toJSON', query));\n    }\n\n    // Removing should not take the query sort, limit, and skip into account.\n    if (query) {\n      query.sort(null).limit(null).skip(0);\n    }\n\n    const promise = this.find(collection, query).then(entities => {\n      const promises = entities.map(entity => this.removeById(collection, entity[idAttribute]));\n      return Promise.all(promises);\n    }).then(responses => {\n      const result = reduce(responses, (result, response) => {\n        result.count += response.count;\n        result.entities = result.entities.concat(response.entities);\n        return result;\n      }, {\n        count: 0,\n        entities: []\n      });\n      return result;\n    });\n\n    return promise;\n  }\n\n  removeById(collection, id) {\n    if (!id) {\n      return Promise.resolve({\n        count: 0,\n        entities: []\n      });\n    }\n\n    if (!isString(id)) {\n      return Promise.reject(new KinveyError('id must be a string', id));\n    }\n\n    const promise = this.adapter.removeById(collection, id);\n    return promise;\n  }\n}\n"],"sourceRoot":"/source/"}