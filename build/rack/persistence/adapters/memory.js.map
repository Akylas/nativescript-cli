{"version":3,"sources":["rack/persistence/adapters/memory.js"],"names":[],"mappings":"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","file":"rack/persistence/adapters/memory.js","sourcesContent":["import Promise from 'babybird';\nimport Queue from 'promise-queue';\nimport { KinveyError, NotFoundError } from '../../../errors';\nimport MemoryCache from 'fast-memory-cache';\nimport keyBy from 'lodash/keyBy';\nimport forEach from 'lodash/forEach';\nimport values from 'lodash/values';\nimport find from 'lodash/find';\nimport isString from 'lodash/isString';\nimport isArray from 'lodash/isArray';\nconst idAttribute = process.env.KINVEY_ID_ATTRIBUTE || '_id';\nconst caches = [];\n\nQueue.configure(Promise);\nconst queue = new Queue(1, Infinity);\n\n/**\n * @private\n */\nexport class Memory {\n  constructor(name) {\n    if (!name) {\n      throw new KinveyError('A name for the collection is required to use the memory persistence adapter.', name);\n    }\n\n    if (!isString(name)) {\n      throw new KinveyError('The name of the collection must be a string to use the memory persistence adapter', name);\n    }\n\n    this.name = name;\n    this.cache = caches[name];\n\n    if (!this.cache) {\n      this.cache = new MemoryCache();\n      caches[name] = this.cache;\n    }\n  }\n\n  find(collection) {\n    return queue.add(() => {\n      const promise = Promise.resolve().then(() => {\n        const entities = this.cache.get(`${this.name}${collection}`);\n\n        if (entities) {\n          try {\n            return JSON.parse(entities);\n          } catch (err) {\n            return entities;\n          }\n        }\n\n        return entities;\n      }).then(entities => {\n        if (!entities) {\n          return [];\n        }\n\n        return entities;\n      });\n      return promise;\n    });\n  }\n\n  findById(collection, id) {\n    return this.find(collection).then(entities => {\n      const entity = find(entities, entity => entity[idAttribute] === id);\n\n      if (!entity) {\n        throw new NotFoundError(`An entity with _id = ${id} was not found in the ${collection} ` +\n          `collection on the ${this.name} memory database.`);\n      }\n\n      return entity;\n    });\n  }\n\n  save(collection, entities) {\n    let singular = false;\n\n    if (!isArray(entities)) {\n      entities = [entities];\n      singular = true;\n    }\n\n    if (entities.length === 0) {\n      return Promise.resolve(entities);\n    }\n\n    return this.find(collection).then(existingEntities => {\n      existingEntities = keyBy(existingEntities, idAttribute);\n      entities = keyBy(entities, idAttribute);\n      const entityIds = Object.keys(entities);\n\n      forEach(entityIds, id => {\n        existingEntities[id] = entities[id];\n      });\n\n      this.cache.set(`${this.name}${collection}`, JSON.stringify(values(existingEntities)));\n      entities = values(entities);\n      return singular ? entities[0] : entities;\n    });\n  }\n\n  removeById(collection, id) {\n    return this.find(collection).then(entities => {\n      entities = keyBy(entities, idAttribute);\n      const entity = entities[id];\n\n      if (!entity) {\n        throw new NotFoundError(`An entity with _id = ${id} was not found in the ${collection} ` +\n          `collection on the ${this.name} memory database.`);\n      }\n\n      delete entities[id];\n      this.cache.set(`${this.name}${collection}`, JSON.stringify(values(entities)));\n\n      return {\n        count: 1,\n        entities: [entity]\n      };\n    });\n  }\n\n  static isSupported() {\n    return true;\n  }\n}\n"],"sourceRoot":"/source/"}