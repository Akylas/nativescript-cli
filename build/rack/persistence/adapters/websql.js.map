{"version":3,"sources":["rack/persistence/adapters/websql.js"],"names":[],"mappings":"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","file":"rack/persistence/adapters/websql.js","sourcesContent":["import Promise from 'babybird';\nimport { KinveyError, NotFoundError } from '../../../errors';\nimport map from 'lodash/map';\nimport forEach from 'lodash/forEach';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport isString from 'lodash/isString';\nconst idAttribute = process.env.KINVEY_ID_ATTRIBUTE || '_id';\nconst masterCollectionName = 'sqlite_master';\nconst size = 5 * 1000 * 1000; // Database size in bytes\nlet webSQL = null;\nconst dbCache = {};\n\nif (typeof window !== 'undefined') {\n  webSQL = {\n    openDatabase: typeof openDatabase !== 'undefined' ? openDatabase : global.openDatabase\n  };\n}\n\n/**\n * @private\n */\nexport class WebSQL {\n  constructor(name = 'kinvey') {\n    this.name = name;\n  }\n\n  openTransaction(collection, query, parameters, write = false) {\n    let db = dbCache[this.name];\n    const escapedCollection = `\"${collection}\"`;\n    const isMaster = collection === masterCollectionName;\n    const isMulti = isArray(query);\n\n    query = isMulti ? query : [[query, parameters]];\n\n    if (!db) {\n      db = webSQL.openDatabase(this.name, 1, '', size);\n      dbCache[this.name] = db;\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      const writeTxn = write || !isFunction(db.readTransaction);\n      db[writeTxn ? 'transaction' : 'readTransaction'](tx => {\n        if (write && !isMaster) {\n          tx.executeSql(`CREATE TABLE IF NOT EXISTS ${escapedCollection} ` +\n            '(key BLOB PRIMARY KEY NOT NULL, value BLOB NOT NULL)');\n        }\n\n        let pending = query.length;\n        const responses = [];\n\n        forEach(query, parts => {\n          const sql = parts[0].replace('#{collection}', escapedCollection);\n\n          tx.executeSql(sql, parts[1], (_, resultSet) => {\n            const response = {\n              rowCount: resultSet.rowsAffected,\n              result: []\n            };\n\n            if (resultSet.rows.length) {\n              for (let i = 0, len = resultSet.rows.length; i < len; i++) {\n                try {\n                  const value = resultSet.rows.item(i).value;\n                  const entity = isMaster ? value : JSON.parse(value);\n                  response.result.push(entity);\n                } catch (err) {\n                  // Catch the error\n                }\n              }\n            }\n\n            responses.push(response);\n            pending = pending - 1;\n\n            if (pending === 0) {\n              resolve(isMulti ? responses : responses.shift());\n            }\n          });\n        });\n      }, err => {\n        err = isString(err) ? err : err.message;\n\n        if (err && err.indexOf('no such table') === -1) {\n          return reject(new NotFoundError(`The ${collection} collection was not found on ` +\n            `the ${this.name} webSQL database.`));\n        }\n\n        const query = 'SELECT name AS value from #{collection} WHERE type = ? AND name = ?';\n        const parameters = ['table', collection];\n\n        return this.openTransaction(masterCollectionName, query, parameters).then(response => {\n          if (response.result.length === 0) {\n            return reject(new NotFoundError(`The ${collection} collection was not found on ` +\n              `the ${this.name} webSQL database.`));\n          }\n\n          return reject(new KinveyError(`Unable to open a transaction for the ${collection} ` +\n            `collection on the ${this.name} webSQL database.`));\n        }).catch(err => {\n          reject(new KinveyError(`Unable to open a transaction for the ${collection} ` +\n            `collection on the ${this.name} webSQL database.`, err));\n        });\n      });\n    });\n\n    return promise;\n  }\n\n  find(collection) {\n    const sql = 'SELECT value FROM #{collection}';\n    const promise = this.openTransaction(collection, sql, []).then(response => response.result).catch(error => {\n      if (error instanceof NotFoundError) {\n        return [];\n      }\n\n      throw error;\n    });\n    return promise;\n  }\n\n  findById(collection, id) {\n    const sql = 'SELECT value FROM #{collection} WHERE key = ?';\n    const promise = this.openTransaction(collection, sql, [id]).then(response => {\n      const entities = response.result;\n\n      if (entities.length === 0) {\n        throw new NotFoundError(`An entity with _id = ${id} was not found in the ${collection} ` +\n          `collection on the ${this.name} webSQL database.`);\n      }\n\n      return entities[0];\n    });\n    return promise;\n  }\n\n  save(collection, entities) {\n    const queries = [];\n    entities = map(entities, entity => {\n      queries.push([\n        'REPLACE INTO #{collection} (key, value) VALUES (?, ?)',\n        [entity[idAttribute], JSON.stringify(entity)]\n      ]);\n\n      return entity;\n    });\n\n    const promise = this.openTransaction(collection, queries, null, true).then(() => entities);\n    return promise;\n  }\n\n  removeById(collection, id) {\n    const promise = this.openTransaction(collection, [\n      ['SELECT value FROM #{collection} WHERE key = ?', [id]],\n      ['DELETE FROM #{collection} WHERE key = ?', [id]],\n    ], null, true).then(response => {\n      const entities = response[0].result;\n      let count = response[1].rowCount;\n      count = count !== undefined ? count : entities.length;\n\n      if (count === 0) {\n        throw new NotFoundError(`An entity with _id = ${id} was not found in the ${collection} ` +\n          `collection on the ${this.name} webSQL database.`);\n      }\n\n      return {\n        count: 1,\n        entities: entities\n      };\n    });\n\n    return promise;\n  }\n\n  static isSupported() {\n    return webSQL !== undefined;\n  }\n}\n"],"sourceRoot":"/source/"}