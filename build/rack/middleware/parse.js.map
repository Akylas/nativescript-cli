{"version":3,"sources":["rack/middleware/parse.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;IAKa;;;AACX,WADW,eACX,GAA8C;QAAlC,6DAAO,yCAA2B;;0BADnC,iBACmC;;kEADnC,4BAEH,OADsC;GAA9C;;eADW;;2BAKJ,SAAS;AACd,aAAO,2BANE,uDAMW,QAAb,CAAsB,IAAtB,CAA2B,YAAM;AACtC,YAAM,WAAW,QAAQ,QAAR,CADqB;;AAGtC,YAAI,YAAY,SAAS,IAAT,EAAe;AAC7B,cAAM,cAAc,SAAS,OAAT,CAAiB,cAAjB,KAAoC,SAAS,OAAT,CAAiB,cAAjB,CAApC,CADS;;AAG7B,cAAI,YAAY,OAAZ,CAAoB,kBAApB,MAA4C,CAA5C,EAA+C;AACjD,gBAAI;AACF,uBAAS,IAAT,GAAgB,KAAK,KAAL,CAAW,SAAS,IAAT,CAA3B,CADE;aAAJ,CAEE,OAAO,GAAP,EAAY;AACZ,uBAAS,IAAT,GAAgB,SAAS,IAAT,CADJ;aAAZ;;AAIF,oBAAQ,QAAR,GAAmB,QAAnB,CAPiD;WAAnD;SAHF;;AAcA,eAAO,OAAP,CAjBsC;OAAN,CAAlC,CADc;;;;SALL","file":"rack/middleware/parse.js","sourcesContent":["import { KinveyMiddleware } from '../middleware';\n\n/**\n * @private\n */\nexport class ParseMiddleware extends KinveyMiddleware {\n  constructor(name = 'Kinvey Parse Middleware') {\n    super(name);\n  }\n\n  handle(request) {\n    return super.handle(request).then(() => {\n      const response = request.response;\n\n      if (response && response.data) {\n        const contentType = response.headers['content-type'] || response.headers['Content-Type'];\n\n        if (contentType.indexOf('application/json') === 0) {\n          try {\n            response.data = JSON.parse(response.data);\n          } catch (err) {\n            response.data = response.data;\n          }\n\n          request.response = response;\n        }\n      }\n\n      return request;\n    });\n  }\n}\n"],"sourceRoot":"/source/"}